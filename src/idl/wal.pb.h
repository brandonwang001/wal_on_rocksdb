// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wal.proto

#ifndef PROTOBUF_INCLUDED_wal_2eproto
#define PROTOBUF_INCLUDED_wal_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_wal_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_wal_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_wal_2eproto();
namespace wal {
class WalStreamLowerBoundMeta;
class WalStreamLowerBoundMetaDefaultTypeInternal;
extern WalStreamLowerBoundMetaDefaultTypeInternal _WalStreamLowerBoundMeta_default_instance_;
class WalStreamMeta;
class WalStreamMetaDefaultTypeInternal;
extern WalStreamMetaDefaultTypeInternal _WalStreamMeta_default_instance_;
class WalStreamUpperBoundMeta;
class WalStreamUpperBoundMetaDefaultTypeInternal;
extern WalStreamUpperBoundMetaDefaultTypeInternal _WalStreamUpperBoundMeta_default_instance_;
}  // namespace wal
namespace google {
namespace protobuf {
template<> ::wal::WalStreamLowerBoundMeta* Arena::CreateMaybeMessage<::wal::WalStreamLowerBoundMeta>(Arena*);
template<> ::wal::WalStreamMeta* Arena::CreateMaybeMessage<::wal::WalStreamMeta>(Arena*);
template<> ::wal::WalStreamUpperBoundMeta* Arena::CreateMaybeMessage<::wal::WalStreamUpperBoundMeta>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace wal {

// ===================================================================

class WalStreamMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wal.WalStreamMeta) */ {
 public:
  WalStreamMeta();
  virtual ~WalStreamMeta();

  WalStreamMeta(const WalStreamMeta& from);

  inline WalStreamMeta& operator=(const WalStreamMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WalStreamMeta(WalStreamMeta&& from) noexcept
    : WalStreamMeta() {
    *this = ::std::move(from);
  }

  inline WalStreamMeta& operator=(WalStreamMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WalStreamMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WalStreamMeta* internal_default_instance() {
    return reinterpret_cast<const WalStreamMeta*>(
               &_WalStreamMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WalStreamMeta* other);
  friend void swap(WalStreamMeta& a, WalStreamMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WalStreamMeta* New() const final {
    return CreateMaybeMessage<WalStreamMeta>(nullptr);
  }

  WalStreamMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WalStreamMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WalStreamMeta& from);
  void MergeFrom(const WalStreamMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WalStreamMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes stream_uuids = 1;
  int stream_uuids_size() const;
  void clear_stream_uuids();
  static const int kStreamUuidsFieldNumber = 1;
  const ::std::string& stream_uuids(int index) const;
  ::std::string* mutable_stream_uuids(int index);
  void set_stream_uuids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_stream_uuids(int index, ::std::string&& value);
  #endif
  void set_stream_uuids(int index, const char* value);
  void set_stream_uuids(int index, const void* value, size_t size);
  ::std::string* add_stream_uuids();
  void add_stream_uuids(const ::std::string& value);
  #if LANG_CXX11
  void add_stream_uuids(::std::string&& value);
  #endif
  void add_stream_uuids(const char* value);
  void add_stream_uuids(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& stream_uuids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_stream_uuids();

  // @@protoc_insertion_point(class_scope:wal.WalStreamMeta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> stream_uuids_;
  friend struct ::TableStruct_wal_2eproto;
};
// -------------------------------------------------------------------

class WalStreamLowerBoundMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wal.WalStreamLowerBoundMeta) */ {
 public:
  WalStreamLowerBoundMeta();
  virtual ~WalStreamLowerBoundMeta();

  WalStreamLowerBoundMeta(const WalStreamLowerBoundMeta& from);

  inline WalStreamLowerBoundMeta& operator=(const WalStreamLowerBoundMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WalStreamLowerBoundMeta(WalStreamLowerBoundMeta&& from) noexcept
    : WalStreamLowerBoundMeta() {
    *this = ::std::move(from);
  }

  inline WalStreamLowerBoundMeta& operator=(WalStreamLowerBoundMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WalStreamLowerBoundMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WalStreamLowerBoundMeta* internal_default_instance() {
    return reinterpret_cast<const WalStreamLowerBoundMeta*>(
               &_WalStreamLowerBoundMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(WalStreamLowerBoundMeta* other);
  friend void swap(WalStreamLowerBoundMeta& a, WalStreamLowerBoundMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WalStreamLowerBoundMeta* New() const final {
    return CreateMaybeMessage<WalStreamLowerBoundMeta>(nullptr);
  }

  WalStreamLowerBoundMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WalStreamLowerBoundMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WalStreamLowerBoundMeta& from);
  void MergeFrom(const WalStreamLowerBoundMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WalStreamLowerBoundMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 lower_bound = 1;
  bool has_lower_bound() const;
  void clear_lower_bound();
  static const int kLowerBoundFieldNumber = 1;
  ::google::protobuf::uint64 lower_bound() const;
  void set_lower_bound(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:wal.WalStreamLowerBoundMeta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 lower_bound_;
  friend struct ::TableStruct_wal_2eproto;
};
// -------------------------------------------------------------------

class WalStreamUpperBoundMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wal.WalStreamUpperBoundMeta) */ {
 public:
  WalStreamUpperBoundMeta();
  virtual ~WalStreamUpperBoundMeta();

  WalStreamUpperBoundMeta(const WalStreamUpperBoundMeta& from);

  inline WalStreamUpperBoundMeta& operator=(const WalStreamUpperBoundMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WalStreamUpperBoundMeta(WalStreamUpperBoundMeta&& from) noexcept
    : WalStreamUpperBoundMeta() {
    *this = ::std::move(from);
  }

  inline WalStreamUpperBoundMeta& operator=(WalStreamUpperBoundMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WalStreamUpperBoundMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WalStreamUpperBoundMeta* internal_default_instance() {
    return reinterpret_cast<const WalStreamUpperBoundMeta*>(
               &_WalStreamUpperBoundMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WalStreamUpperBoundMeta* other);
  friend void swap(WalStreamUpperBoundMeta& a, WalStreamUpperBoundMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WalStreamUpperBoundMeta* New() const final {
    return CreateMaybeMessage<WalStreamUpperBoundMeta>(nullptr);
  }

  WalStreamUpperBoundMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WalStreamUpperBoundMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WalStreamUpperBoundMeta& from);
  void MergeFrom(const WalStreamUpperBoundMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WalStreamUpperBoundMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 upper_bound = 2;
  bool has_upper_bound() const;
  void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 2;
  ::google::protobuf::uint64 upper_bound() const;
  void set_upper_bound(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:wal.WalStreamUpperBoundMeta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 upper_bound_;
  friend struct ::TableStruct_wal_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WalStreamMeta

// repeated bytes stream_uuids = 1;
inline int WalStreamMeta::stream_uuids_size() const {
  return stream_uuids_.size();
}
inline void WalStreamMeta::clear_stream_uuids() {
  stream_uuids_.Clear();
}
inline const ::std::string& WalStreamMeta::stream_uuids(int index) const {
  // @@protoc_insertion_point(field_get:wal.WalStreamMeta.stream_uuids)
  return stream_uuids_.Get(index);
}
inline ::std::string* WalStreamMeta::mutable_stream_uuids(int index) {
  // @@protoc_insertion_point(field_mutable:wal.WalStreamMeta.stream_uuids)
  return stream_uuids_.Mutable(index);
}
inline void WalStreamMeta::set_stream_uuids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:wal.WalStreamMeta.stream_uuids)
  stream_uuids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void WalStreamMeta::set_stream_uuids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:wal.WalStreamMeta.stream_uuids)
  stream_uuids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void WalStreamMeta::set_stream_uuids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stream_uuids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:wal.WalStreamMeta.stream_uuids)
}
inline void WalStreamMeta::set_stream_uuids(int index, const void* value, size_t size) {
  stream_uuids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:wal.WalStreamMeta.stream_uuids)
}
inline ::std::string* WalStreamMeta::add_stream_uuids() {
  // @@protoc_insertion_point(field_add_mutable:wal.WalStreamMeta.stream_uuids)
  return stream_uuids_.Add();
}
inline void WalStreamMeta::add_stream_uuids(const ::std::string& value) {
  stream_uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:wal.WalStreamMeta.stream_uuids)
}
#if LANG_CXX11
inline void WalStreamMeta::add_stream_uuids(::std::string&& value) {
  stream_uuids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:wal.WalStreamMeta.stream_uuids)
}
#endif
inline void WalStreamMeta::add_stream_uuids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stream_uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:wal.WalStreamMeta.stream_uuids)
}
inline void WalStreamMeta::add_stream_uuids(const void* value, size_t size) {
  stream_uuids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:wal.WalStreamMeta.stream_uuids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
WalStreamMeta::stream_uuids() const {
  // @@protoc_insertion_point(field_list:wal.WalStreamMeta.stream_uuids)
  return stream_uuids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
WalStreamMeta::mutable_stream_uuids() {
  // @@protoc_insertion_point(field_mutable_list:wal.WalStreamMeta.stream_uuids)
  return &stream_uuids_;
}

// -------------------------------------------------------------------

// WalStreamLowerBoundMeta

// optional uint64 lower_bound = 1;
inline bool WalStreamLowerBoundMeta::has_lower_bound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WalStreamLowerBoundMeta::clear_lower_bound() {
  lower_bound_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 WalStreamLowerBoundMeta::lower_bound() const {
  // @@protoc_insertion_point(field_get:wal.WalStreamLowerBoundMeta.lower_bound)
  return lower_bound_;
}
inline void WalStreamLowerBoundMeta::set_lower_bound(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  lower_bound_ = value;
  // @@protoc_insertion_point(field_set:wal.WalStreamLowerBoundMeta.lower_bound)
}

// -------------------------------------------------------------------

// WalStreamUpperBoundMeta

// optional uint64 upper_bound = 2;
inline bool WalStreamUpperBoundMeta::has_upper_bound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WalStreamUpperBoundMeta::clear_upper_bound() {
  upper_bound_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 WalStreamUpperBoundMeta::upper_bound() const {
  // @@protoc_insertion_point(field_get:wal.WalStreamUpperBoundMeta.upper_bound)
  return upper_bound_;
}
inline void WalStreamUpperBoundMeta::set_upper_bound(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:wal.WalStreamUpperBoundMeta.upper_bound)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace wal

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_wal_2eproto
